# Репозитории

# Git:
# ' Git Flow$
# ' Работа с командами git
# ' Знакомство с сервисами Github, Gitlab, Bitbucket


"""Git — система управления версиями с распределенной архитектурой.


   Gitflow является методологией работы с Git. Это значит, она
   определяет, какие ветки нужно создать и как производить их слияние.

    Основные команды для работы с git:

git init        Git "включается" или "запускается" для данного репозитория (т.е. папки).
                Сначала через командрную строку указываем cd 'C:\Python\Уроки TeachMeSkill'
                (ковычки нужны т.к. в пути используется пробел в названии папки). Далее вводим
                команду.

git pull        получение  данных и интеграция с другим репозиторием или локальной веткой 

git reset       как можно догадаться из названия, используется в основном для отмены изменений

git commit      берёт все данные, добавленные в индекс с помощью git add, и сохраняет их слепок 
#               во внутренней базе данных, а затем сдвигает указатель текущей ветки на этот слепок.

git diff        используется для вычисления разницы между любыми двумя Git деревьями

git status      показывает состояния файлов в рабочем каталоге и индексе

git add         добавляет содержимое рабочего каталога в индекс (staging area) для последующего коммита.




    Github

GitHub — сервис онлайн-хостинга репозиториев, обладающий всеми функциями распределённого контроля
версий и функциональностью управления исходным кодом — всё, что поддерживает Git и даже больше.
Также GitHub может похвастаться контролем доступа, багтрекингом, управлением задачами и вики для
каждого проекта."""


# Как можно отформатировать время:

# arbitrary number of seconds
s = 13420
# hours
hours = s // 3600 
# remaining seconds
s = s - (hours * 3600)
# minutes
minutes = s // 60
# remaining seconds
seconds = s - (minutes * 60)
# total time
print('{:00}:{:00}:{:00}'.format(int(hours), int(minutes), int(seconds)))
# result: 03:43:40